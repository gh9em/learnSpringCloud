server:
  port: 6001

spring:
  application.name: cloud-order-service

eureka:
  client:
    register-with-eureka: true
    # watch registried client count
    fetch-registry: true
    # value type is map, do not change key name, such as 'defaultZone'
    service-url:
      defaultZone: http://localhost:7001/eureka/

CLOUD-PAYMENT-SERVICE:
  ribbon:
    connectTimeout: 2000
    readTimeout: 5000
    # retry enable
    # OkToRetryOnAllOperations: true
    # each node retry count
    # MaxAutoRetries: 0
    # retry node count
    # MaxAutoRetriesNextServer: 1

feign:
  hystrix:
    enabled: true
  client:
    config:
      # provider-service-name, default means global; or use feignName: 'provider-service-name' instead
      CLOUD-PAYMENT-SERVICE:
        connectTimeout: 5000
        readTimeout: 5000
        # none(default), basic, headers, full
        loggerLevel: full

hystrix:
  command:
    # (Open)feign will generate 'className#methodName(param1Type,param2Type,...)' for each api by default, see https://github.com/OpenFeign/feign/blob/master/hystrix/README.md
    # commandKey, default means global
    'OrderServiceFeignImpl#slowGetPaymentById(Long)':
      execution.isolation:
        # samephore(immediately reject), thread(thread pool queue)
        # strategy: thread
        thread.timeoutInMilliseconds: 5000
      circuitBreaker:
        enabled: true
        requestVolumeThreshold: 10
        # if (requestVolumeThreshold * errorThresholdPercentage% = )5 requests fail circuitBreaker change to OPEN status in each 10 requests
        errorThresholdPercentage: 50
        # sleep time of circuitBreaker change from OPEN to Half-OPEN status
        sleepWindowInMilliseconds: 10000

# 'hystrix.stream' for support hystrix dashboard
management.endpoints.web.exposure.include: hystrix.stream, info, health